buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        def plugin = rootProject.ext.gradlePlugins

        classpath plugin.androidApt
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

android {
    def versions = rootProject.ext.versions

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "com.spectrl.comix"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.code
        versionName versions.name
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        archivesBaseName = "comix-${versions.code}"

        def secretProperties = file("../secret.properties")
        Properties props = new Properties()
        props.load(new FileInputStream(secretProperties))

        buildConfigField "String", "MARVEL_PUBLIC_KEY", "\"${props.marvel_public_key}\""
        buildConfigField "String", "MARVEL_PRIVATE_KEY", "\"${props.marvel_private_key}\""
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(path: ':core')

    def libs = rootProject.ext.libs

    compile libs.appcompat
    compile libs.recyclerview

    compile libs.dagger
    apt libs.daggerCompiler

    compile libs.rxAndroid

    compile libs.butterknife
    apt libs.butterknifeCompiler

    testCompile libs.junit

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
}
